services:
    # Runs Tests Before Deployment
    test-runner:
        image: mcr.microsoft.com/dotnet/sdk:8.0
        container_name: test-runner
        working_dir: /app
        volumes:
            - .:/app
        command: >
            sh -c "dotnet restore CryptoCoinBlock.sln &&
                   dotnet test CM.Domain.Tests/CM.Domain.Tests.csproj --configuration Release --no-restore &&
                   dotnet test CM.API.Tests/CM.API.Tests.csproj --configuration Release --no-restore"
        networks:
            - ccb_network

    # PostgreSQL Database
    ccb-postgresql:
        image: postgres:latest
        container_name: ccb-postgresql
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: Ak.123456Qw
            POSTGRES_DB: ccb
        ports:
            - "5433:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - ccb_network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    # Apply Migrations Before Running the App
    db-migrator:
        image: mcr.microsoft.com/dotnet/sdk:8.0
        container_name: db-migrator
        depends_on:
            ccb-postgresql:
                condition: service_healthy
        volumes:
            - .:/app
        working_dir: /app
        environment:
            ConnectionStrings__DefaultConnection: "Host=ccb-postgresql;Port=5432;Database=ccb;Username=postgres;Password=Ak.123456Qw"
            ASPNETCORE_ENVIRONMENT: Production
        command: >
             bash -c "unset PATH &&
             export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/.dotnet/tools' &&
             dotnet --info &&
             dotnet tool install --global dotnet-ef &&
             dotnet restore CryptoCoinBlock.sln &&
             dotnet ef database update --project CM.Data.Migrations/CM.Data.Migrations.csproj --startup-project CryptoCoinBlock/CryptoCoinBlock.csproj"
        
        networks:
            - ccb_network

    # ELK Stack
    ccb-elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:sha256-fff57a996ea17bad3163108f6f3221c7f5a43cac20bffea5082c49eb4d7950e5
        container_name: ccb-elasticsearch
        environment:
          discovery.type: single-node
          ES_JAVA_OPTS: "-Xms512m -Xmx512m"
          xpack.security.enabled: false
        ports:
          - "9201:9200"
        networks:
          - ccb_network
        volumes:
          - es_data:/usr/share/elasticsearch/data
    
    # Grafana Service
    ccb-grafana:
        image: grafana/grafana:latest
        container_name: ccb-grafana
        ports:
          - "30000:3000"
        networks:
          - ccb_network
        depends_on:
          - ccb-elasticsearch
        volumes:
          - grafana_data:/var/lib/grafana
        environment:
          GF_SECURITY_ADMIN_PASSWORD: "adm#123456"  # Optional: Set the admin password if needed

    # Main Application
    crypto-coins-blocks:
        image: crypto-coins-blocks
        build:
            context: .
            dockerfile: Dockerfile
        container_name: coins-blocks
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
            - ConnectionStrings__DefaultConnection=Host=ccb-postgresql;Port=5432;Database=ccb;Username=postgres;Password=Ak.123456Qw
        ports:
            - "5555:5555"
        depends_on:
            - test-runner
            - db-migrator
        networks:
            - ccb_network
        healthcheck:
          test: ["CMD", "echo", "OK"] 
          interval: 10s
          timeout: 5s
          retries: 5

    # API Gateway Application
    ccb-api-gateway:
        image: api-gateway
        build:
            context: ./CM.ApiGateway
            dockerfile: Dockerfile
        container_name: ccb-api-gateway
        environment:
            - ASPNETCORE_ENVIRONMENT=Production
        ports:
            - "5550:5550"
        networks:
            - ccb_network
        depends_on:
            crypto-coins-blocks:
                condition: service_healthy

networks:
  ccb_network:
    driver: bridge

volumes:
    postgres_data:
    es_data:    
    grafana_data: